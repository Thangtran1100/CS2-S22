/*
    Programmer: Dai Tran
    
    Program Name: hw7.cpp

    Date: 01/04/2022

    Version: 4.5

    Description: Design an inventory class that stores the following members:

 

    serialNumber:   An integer that holds a part’s serial number.

    manufactDate:   A member that holds the date the part was manufactured.

    LotNum:         An integer that holds the part’s lot number.

    

    The class should have appropriate member functions for storing data into, and retrieving data from, these members.
    Next, design a stack class that can hold objects of the class described above. If you wish, you may use the template you designed in Lab programming lab#2.
    Last, design a program that uses the stack class described above. 
    The program should have a loop that asks the user if he or she wishes to add a part to inventory, or take a part from inventory. 
    The loop should repeat until the user is finished.
    If the user wishes to add a part to inventory, the program should ask for the serial number, date of manufacture, and lot number. 
    The data should be stored in an inventory object, and pushed onto the stack.
    If the user wishes to take a part from inventory, the program should pop the top most part from the stack and display the contents of its member variables.
    When the user finishes the program, it should display the contents of the member values of all the objects that remain on the stack.
*/

//inventory.h
#pragma once
#ifndef INVENTORY_H
#define INVENTORY_H

#include<iostream>
#define SIZE 20

class inventory
{
public:
    int serialNumber;

    int lotNum;
    
    std::string manufactDate;
};

class Stack
{
private:
    inventory storage[SIZE];

    int rear;
public:
    //defaut constructor
    Stack();

    //member functions
    void push();
    
    void pop();

    void display();
};

void menu();

#endif//end file

//inventory.cpp

#include "inventory.h"

Stack::Stack()
{
    rear = -1;
}

void Stack::push()
{
    if (rear >= SIZE)
    {
        std::cout << "Inventory is full";
    }
    else
    {
        rear++;

        std::cout << "Enter Serial Num: ";

        std::cin >> storage[rear].serialNumber;

        std::cout << "Enter Manufacturing Date(MM/DD/YYYY): ";

        std::cin >> storage[rear].manufactDate;

        std::cout << "Enter Lot Num: ";

        std::cin >> storage[rear].lotNum;
    }
}

void Stack::pop()
{
    if (rear < 0)
    {
        std::cout << "Inventory is empty";
    }
    else
    {
        std::cout << "\nRemoved part details:\n";

        std::cout << "\nSerial Num: " << storage[rear].serialNumber;

        std::cout << "\nManufacturing Date: " << storage[rear].manufactDate;

        std::cout << "\nLot Num: " << storage[rear].lotNum;

        rear--;
    }
}

//This function display information to screen
void Stack::display()
{
    for(int i = 0; i <= rear; i++)
    {
        std::cout << "\nSerial Num: " << storage[i].serialNumber;

        std::cout << "\nManufacturing Date: " << storage[i].manufactDate;

        std::cout << "\nLot Num: " << storage[i].lotNum;

        std::cout << std::endl;
    }
}

//This function will get user input and display to screen
void menu()
{
    Stack inventory;

    int choice;

    do
    {
        std::cout << "\n\nMENU\n"
                  << "1. Store\n"
                  << "2. Remove\n"
                  << "3. Exit\n\n"
                  << "Enter your choice: ";

        std::cin >> choice;

        switch (choice)
        {
            case 1:
            {
                inventory.push();

                break;
            }
            case 2:
            {
                inventory.pop();

                break;
            }
            case 3:
            {
                std::cout << "\nInventory:";

                inventory.display();

                break;
            }
        }
    } while (choice != 3);
}//end file

//main.cpp

#include "inventory.h"

int main()
{
    menu();

    return 0;
}//end file