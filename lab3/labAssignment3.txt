/*
	Program Name: lab2.cpp
	Programmer: Dai Tran
	Date: 2/26/2022
	Version: 1.2
	Description: Design a class named Employee. The class should keep the following information in member variables:

Employee name
Employee number
Hire Date
Write one or more constructors and the appropriate accessor and mutator functions for the class.

Next, write a class named ProductionWorker that is derived from the Employee class. The ProductionWorker class should have member variables to hold the following information:

Shift (an integer)
Hourly pay rate (a double)
The workday is divided into two shifts: day and night. The shift variable will hold an integer value representing the shift that the employee works. The day shift is shift 1 and the night shift is shift 2. Write one or more constructors and the appropriate accessor and mutator functions for the class. Demonstrate the classes by writing a program that uses a ProductionWorker object.
*/
#include <iostream>

using namespace std;

//Class declaration
class Employee
{
protected:
    string employee_name;

    int employee_number;

    string hire_date;

public:
    Employee();
    Employee(string name, int number, string date);
    string getEmployeeName();
    int getEmployeeNumber();
    string getHireDate();
    void setEmployeeName(string e_name);
    void setEmployeeNumber(int e_number);
    void setEmployeeDate(string e_date);
};

//Class declaration
class ProductionWorker : public Employee
{
protected:
    int shift;

    double pay_rate;

public:
    ProductionWorker(string e_name, int e_number, string hire_date, int e_shift, double e_rate);
    int getShift();
    double getPayRate();
    void setShift(int e_shift);
    void setPayRate(double e_rate);
};

Employee::Employee()
{
    employee_name = "";

    employee_number = 0;

    hire_date = "";
}

Employee::Employee(string name, int number, string date)
{
    employee_name = name;

    employee_number = number;

    hire_date = date;
}

string Employee::getEmployeeName()
{
    return employee_name;
}

int Employee::getEmployeeNumber()
{
    return employee_number;
}

string Employee::getHireDate()
{
    return hire_date;
}

void Employee::setEmployeeName(string e_name)
{
    employee_name = e_name;
}

void Employee::setEmployeeNumber(int e_number)
{
    employee_number = e_number;
}

void Employee::setEmployeeDate(string e_date)
{
    hire_date = e_date;
}

ProductionWorker::ProductionWorker(string e_name, int e_number, string hire_date, int e_shift, double e_rate) : Employee(e_name, e_number, hire_date)
{
    shift = e_shift;

    pay_rate = e_rate;
}

int ProductionWorker::getShift()
{
    return shift;
}

double ProductionWorker::getPayRate()
{
    return pay_rate;
}

void ProductionWorker::setShift(int e_shift)
{
    shift = e_shift;
}

void ProductionWorker::setPayRate(double e_rate)
{
    pay_rate = e_rate;
}

int main()
{
    ProductionWorker worker1("John Doe", 2364753, "02/26/2022", 1, 1.5);

    cout << worker1.getEmployeeName() << endl
         
         << worker1.getEmployeeNumber() << endl

         << worker1.getHireDate() << endl

         << worker1.getShift() << endl

         << worker1.getPayRate() << endl;

    return 0;
}